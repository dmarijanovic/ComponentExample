@model Enterwell.Models.Invoice

@{
    ViewBag.Title = "Edit";
    string currencySimbol = @Model.CurrencySimbol;
}

<h2>
    Edit invoice ( @Html.DisplayFor(model => model.ID) )
</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)


        <div class="form-group">
            @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                    <p class="form-control-static">
                        @Html.DisplayFor(model => model.Created)
                    </p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                <p class="form-control-static">
                    @Html.DisplayFor(model => model.CreatedBy.UserName)
                </p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Due, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Due, "DateTimePicker")
                @Html.ValidationMessageFor(model => model.Due, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VatModuleIdentifier, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.VatModuleIdentifier, ViewBag.VatOptions as List<SelectListItem>, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalSum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                <p class="form-control-static">
                    @Html.DisplayFor(model => model.TotalSum)
                    @currencySimbol
                </p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalSumWithVat, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                <p class="form-control-static">
                    @Html.DisplayFor(model => model.TotalSumWithVat)
                    @currencySimbol
                </p>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>

    <p>
        @Html.ActionLink("Create New Item", "Create", "InvoiceItems", new { InvoiceId = Model.ID }, new { @class = "btn btn-default" })
    </p>

    <table class="table">

        @* Generate headers for table *@
        @Html.DisplayFor(model => model.Items, "InvoiceItemTableHeader")

        @* Generate body for table *@
        @Html.EditorFor(model => model.Items)

    </table>

    <div class="col-md-offset-11 col-md-12">
        <input type="submit" value="Save" class="btn btn-default" />
    </div>


}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
